(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{488:function(t,s,a){"use strict";a.r(s);var n=a(20),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"innodb记录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb记录结构"}},[t._v("#")]),t._v(" InnoDB记录结构")]),t._v(" "),a("h2",{attrs:{id:"innodb存储引擎介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb存储引擎介绍"}},[t._v("#")]),t._v(" innoDB存储引擎介绍")]),t._v(" "),a("p",[t._v("存储引擎的作用就是内存和磁盘打交道，负责将数据在他两之间传输，为了提高传输效率，提出了“页”的概念，也就是在一般情况下，为了减少io次数，一次最少从磁盘中读取16KB的内容到内存中，一次最少把内存中的16KB内容刷新到磁盘中。")]),t._v(" "),a("blockquote",[a("p",[t._v("页：将数据划分为若干个页，以页作为磁盘和内存之间交互的基本单位，InnoDB中页的大小一般为 16 KB。")])]),t._v(" "),a("h2",{attrs:{id:"innodb行格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#innodb行格式"}},[t._v("#")]),t._v(" innoDB行格式")]),t._v(" "),a("p",[t._v("行格式：记录在磁盘上的存放方式称为行格式。")]),t._v(" "),a("p",[t._v("四种行格式：Compact 、 Redundant 、Dynamic 和 Compressed 行格式。")]),t._v(" "),a("h3",{attrs:{id:"指定行格式命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定行格式命令"}},[t._v("#")]),t._v(" 指定行格式命令")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("REATE TABLE 表名 (列的信息) ROW_FORMAT=行格式名称 \nALTER TABLE 表名 ROW_FORMAT=行格式名称\n\n\nmysql> CREATE TABLE record_format_demo ( \n   ->     c1 VARCHAR(10), \n   ->     c2 VARCHAR(10) NOT NULL, \n   ->     c3 CHAR(10), \n   ->     c4 VARCHAR(10) \n   -> ) CHARSET=ascii ROW_FORMAT=COMPACT; \nQuery OK, 0 rows affected (0.03 sec)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h3",{attrs:{id:"介绍innodb的compact行格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍innodb的compact行格式"}},[t._v("#")]),t._v(" 介绍InnoDB的Compact行格式")]),t._v(" "),a("p",[t._v("可以把记录分为记录额外信息，记录真实数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20220211144936545.png",alt:"image-20220211144936545"}})]),t._v(" "),a("h4",{attrs:{id:"记录额外信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记录额外信息"}},[t._v("#")]),t._v(" 记录额外信息")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("边长字段长度列表")]),t._v("：记录可变长度字段的真实数据占用的字节数")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：变长字段长度列表中只存储值为 非NULL 的列内容占用的长度，值为 NULL 的列的长度是不储存的")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("null值列表")]),t._v("：值为 NULL 的列统一管理起来，存储到 NULL 值列表中")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("记录头信息")]),t._v("：固定的 5 个字节组成，存放记录的描述信息")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20220211145735548.png",alt:"记录头信息"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20220211145757054.png",alt:"记录头信息"}})]),t._v(" "),a("h4",{attrs:{id:"真实数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#真实数据"}},[t._v("#")]),t._v(" 真实数据")]),t._v(" "),a("p",[t._v("除了存放真实数据外，还会添加隐藏列，具体如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("列名")]),t._v(" "),a("th",[t._v("是否必须")]),t._v(" "),a("th",[t._v("占用空间")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("row_id")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("6 字节")]),t._v(" "),a("td",[t._v("行ID，唯一标识一条记录")])]),t._v(" "),a("tr",[a("td",[t._v("transaction_id")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("6 字节")]),t._v(" "),a("td",[t._v("事务ID")])]),t._v(" "),a("tr",[a("td",[t._v("roll_pointer")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("7 字节")]),t._v(" "),a("td",[t._v("回滚指针")])])])]),t._v(" "),a("p",[a("strong",[t._v("注意：实际上这几个列的真正名称其实是：DB_ROW_ID、DB_TRX_ID、DB_ROLL_PTR，我们为了美观才写成了row_id、transaction_id和roll_pointer。")])]),t._v(" "),a("h4",{attrs:{id:"char-m-的存储格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char-m-的存储格式"}},[t._v("#")]),t._v(" char(M)的存储格式")]),t._v(" "),a("p",[t._v("对于 CHAR(M) 类型的列来说，当列采用的是"),a("strong",[t._v("定长字符集")]),t._v("时，该列占用的字节数"),a("strong",[t._v("不会被加到变长字段长度列表")]),t._v("，而如果采用"),a("strong",[t._v("变长字符集")]),t._v("时，该列占用的字节数也"),a("strong",[t._v("会被加到变长字段长度列表")])]),t._v(" "),a("h4",{attrs:{id:"表的行格式采用compact实验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表的行格式采用compact实验"}},[t._v("#")]),t._v(" 表的行格式采用compact实验")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" record_test_1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bigint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tscore "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcontent "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\textra "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("row_format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("compact"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("record_test_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("extra"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("78.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wodetian'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nidetiantadetian'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("record_test_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("extra"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17983.9812")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zhx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'shin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nosuke'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("record_test_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("extra"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("669.996")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("record_test_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token identifier"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("extra"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jun'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("目前表结构")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+------------+------+----------+------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" id    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" score      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" content  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" extra            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+------------+------+----------+------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("78.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hash")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" wodetian "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" nidetiantadetian "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65536")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17983.9812")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" zhx  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" shin     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" nosuke           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("669.996")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" aa   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" c        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" jun              "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------+------------+------+----------+------------------+")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("windows下 到"),a("code",[t._v("C:\\ProgramData\\MySQL\\MySQL Server 5.7\\Data\\test")]),t._v("下找到文件"),a("code",[t._v("record_test_1.ibd")]),t._v("，使用notepad++ 16进制打开（在notepad++找到插件->HEX-editor-> view in HEX,如果没有就安装一个）")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20220212152338394.png",alt:"image-20220212152338394"}})]),t._v(" "),a("p",[t._v("我们先来看第一条记录的"),a("code",[t._v("content")]),t._v(","),a("code",[t._v("extra")]),t._v("字段，字段长度分别为8和16，字符类型都是可变的，所以这两个字段是会被存放在"),a("code",[t._v("变长字段长度列表")]),t._v(",")]),t._v(" "),a("p",[t._v("又因为存放时的顺序是逆序的，所以应该是  "),a("code",[t._v("10 08")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20220212152910001.png",alt:"image-20220212152910001"}})]),t._v(" "),a("h3",{attrs:{id:"redundant行格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redundant行格式"}},[t._v("#")]),t._v(" Redundant行格式")]),t._v(" "),a("p",[t._v("没太理解，暂不记录")]),t._v(" "),a("p",[t._v("##行溢出数据")]),t._v(" "),a("h3",{attrs:{id:"varchar-m-最多能存储的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#varchar-m-最多能存储的数据"}},[t._v("#")]),t._v(" VARCHAR(M)最多能存储的数据")]),t._v(" "),a("p",[t._v("存储一个 VARCHAR(M) 类型的列，其实需要占用3部分存储空间：")]),t._v(" "),a("ol",[a("li",[t._v("真实数据")]),t._v(" "),a("li",[t._v("真实数据占用字节的长度")]),t._v(" "),a("li",[t._v("NULL 值标识，如果该列有 NOT NULL 属性则可以没有这部分存储空间")])]),t._v(" "),a("p",[t._v("首先前提是VARCHAR(M) 类型的列最多可以占用 65535 个字节！")]),t._v(" "),a("p",[a("strong",[t._v("现在假设列的字符集是ascii 字符集(一个字符代表一个字节)，表只有一个列")])]),t._v(" "),a("ol",[a("li",[t._v("如果列有"),a("code",[t._v("not null")]),t._v("则不需要花一个字节空间存null值，真实数据的长度可能占用2个字节，即可以最大有65533个字节来存储真实数据，则可以存65533个字符")]),t._v(" "),a("li",[t._v("如果列没有"),a("code",[t._v("not null")]),t._v("则需要花一个字节空间存null值，且真实数据的长度可能占用2个字节，即可以最大有65532个字节来存储真实数据，则可以存65532个字符")])]),t._v(" "),a("p",[t._v("但是，如果字符集不是ascii 字符集呢？是utf8呢？gbk呢？")]),t._v(" "),a("p",[t._v("其实前面算的最大字节数是不用变得，因为字符集的改变，一个字符最大占用字节数量变了。")]),t._v(" "),a("p",[t._v("比如字符集是utf8的话，一个字符最大使用3个字节，所以上面的②情况，最大存储字符数65532/3=21844")]),t._v(" "),a("blockquote",[a("p",[t._v("上述所言在列的值允许为NULL的情况下，gbk字符集下M的最大取值就是32766，utf8字符集下M的最大取值就是21844，这都是在表中只有一个字段的情况下说的，一定要记住一个行中的所有列（不包括隐藏列和记录头信息）占用的字节长度加起来不能超过65535个字节！")])]),t._v(" "),a("h3",{attrs:{id:"记录中的数据太多产生的溢出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记录中的数据太多产生的溢出"}},[t._v("#")]),t._v(" 记录中的数据太多产生的溢出")]),t._v(" "),a("p",[t._v("在 Compact 和 Reduntant 行格式中，对于占用存储空间非常大的列，在 记录的真实数据 处只会存储该列的一部分数据，把剩余的数据分散存储在几个其他的页中，然后 记录的真实数据 处用20个字节存储指向这些页的地址（当然这20个字节中还包括这些分散在其他页面中的数据的占用的字节数），从而可以找到剩余数据所在的页，\n如图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20220212172118535.png",alt:"image-20220212172118535"}})]),t._v(" "),a("p",[a("strong",[t._v("最后需要注意的是，不只是 VARCHAR(M) 类型的列，其他的 TEXT、BLOB 类型的列在存储数据非常多的时候也会发生 "),a("code",[t._v("行溢出")])])]),t._v(" "),a("h3",{attrs:{id:"行溢出的临界点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行溢出的临界点"}},[t._v("#")]),t._v(" 行溢出的临界点")]),t._v(" "),a("p",[t._v("假设一个列中存储的数据字节数为n，那么发生 行溢出 现象时需要满足这个式子：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("136 + 2×(27 + n) > 16384\nn > 8098\n解释：136byte一页的额外信息+一行记录（27byte的记录额外信息+nbyte真实数据）*2 > 16384byte一页最大存储字节数\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("注释：")]),t._v(" "),a("p",[a("code",[t._v("136")]),t._v("：每个页除了存放我们的记录以外，也需要存储一些额外的信息，乱七八糟的额外信息加起来需要 136 个字节的空间（现在只要知道这个数字就好了），其他的空间都可以被用来存储记录。")]),t._v(" "),a("p",[a("code",[t._v("2")]),t._v("：一个页中至少存放两行记录。")]),t._v(" "),a("p",[a("code",[t._v("27")]),t._v("：每个记录需要的额外信息是 27 字节。")]),t._v(" "),a("p",[a("code",[t._v("16384")]),t._v("： 一页16kb = 16384byte")]),t._v(" "),a("p",[t._v("但这只是假设一个表只有一个列的情况，有多个列的话计算公式和结果都要修改")]),t._v(" "),a("p",[a("strong",[t._v("结论：你不用关注这个临界点是什么，只要知道如果我们想一个行中存储了很大的数据时，可能发生 行溢出 的现象。")])]),t._v(" "),a("h2",{attrs:{id:"dynamic和compressed行格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dynamic和compressed行格式"}},[t._v("#")]),t._v(" Dynamic和Compressed行格式")]),t._v(" "),a("h3",{attrs:{id:"dynamic格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dynamic格式"}},[t._v("#")]),t._v(" Dynamic格式")]),t._v(" "),a("p",[t._v("MySQL 版本是 5.7 ，它的默认行格式就是 Dynamic ，这俩行格式和 Compact 行格式挺像，只不过在处理 行溢出 数据时有点儿分歧，它们不会在记\n录的真实数据处存储字段真实数据的前 768 个字节，而是把"),a("strong",[t._v("所有的字节都存储到其他页面中")]),t._v("，只在记录的真实数据处存储其他页面的地址，就像这样：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20220212172012071.png",alt:"image-20220212172012071"}})]),t._v(" "),a("h3",{attrs:{id:"compressed行格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compressed行格式"}},[t._v("#")]),t._v(" Compressed行格式")]),t._v(" "),a("p",[t._v("Compressed 行格式和 Dynamic 不同的一点是， Compressed 行格式会采用压缩算法对页面进行压缩，以节省空间。")])])}),[],!1,null,null,null);s.default=e.exports}}]);