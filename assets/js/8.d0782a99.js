(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{462:function(s,t,a){"use strict";a.r(t);var n=a(20),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"面试过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试过程"}},[s._v("#")]),s._v(" 面试过程")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("先自我介绍")])]),s._v(" "),a("li",[a("p",[s._v("先聊项目")]),s._v(" "),a("p",[s._v("谈谈你项目里负责的模块")]),s._v(" "),a("p",[s._v("开始追着项目模块细问")]),s._v(" "),a("p",[s._v("谈到多线程更新缓存数据时，被问到会不会有并发的问题，怎么解决（主要是redis更新操作不是原子性的，可能存在并发操作）")]),s._v(" "),a("p",[s._v("加synchronized在方法上，或者如果只是覆盖的话setnx命令保证原子性")])]),s._v(" "),a("li",[a("p",[s._v("开始问简历上的东西")]),s._v(" "),a("p",[a("strong",[s._v("设计模式")])]),s._v(" "),a("p",[s._v("​\t观察者模式")]),s._v(" "),a("p",[s._v("​\t自己讲了监听者模式，也没讲明白")]),s._v(" "),a("p",[s._v("​\t（可以讲代理模式）")]),s._v(" "),a("p",[a("strong",[s._v("Linux")])]),s._v(" "),a("p",[s._v("​\t怎么查日志 tail -f -n 数量 查询最近行数的日志")]),s._v(" "),a("p",[s._v("​\t查关键字 加 | grep")]),s._v(" "),a("p",[s._v("​\t查询关键字时忽略大小写（不会） grep -i  文件名")]),s._v(" "),a("p",[s._v("​\t查询日志行数（不会）nl 文件名")]),s._v(" "),a("p",[s._v("​\t有没有查过系统参数（不会）")]),s._v(" "),a("p",[s._v("​\tdf -h 查看磁盘占用的空间")]),s._v(" "),a("p",[s._v("​\t"),a("a",{attrs:{href:"#linux命令补充"}},[s._v("linux命令补充")])]),s._v(" "),a("p",[a("strong",[s._v("cloud")])]),s._v(" "),a("p",[s._v("​\t说下你对注册中心的理解（服务的注册流程，发现流程，自我保护机制）")]),s._v(" "),a("p",[a("strong",[s._v("sql优化的经历")])]),s._v(" "),a("p",[s._v("​\t说了下 explain 的使用 type keys 字段的解释，")]),s._v(" "),a("p",[s._v("​\t说了下 工作中发现函数使查询速度减慢，索引的添加，最左匹配原则和关联字段加索引")]),s._v(" "),a("p",[s._v("​\t"),a("a",{attrs:{href:"#sql优化补充"}},[s._v("sql优化补充")])])]),s._v(" "),a("li",[a("p",[s._v("谈谈自己是怎么学习的")]),s._v(" "),a("p",[s._v("脑子抽风说了自己最近在看jvm的书，这不是挖坑吗，")]),s._v(" "),a("p",[s._v("然后把类加载机制的那五个步骤说了一边")]),s._v(" "),a("p",[s._v("其中说到验证时，被问到只有class文件格式被验证吗？")]),s._v(" "),a("p",[s._v("​\t"),a("a",{attrs:{href:"#类加载机制补充"}},[s._v("类加载机制补充")])]),s._v(" "),a("p",[s._v("又被问工作的时候怎么学习的，学到了什么 ？")]),s._v(" "),a("p",[s._v("就把自己学gitlab版的ci ，docker 编写dockerfile 说了下,但是面试官没有继续问下去")])]),s._v(" "),a("li",[a("p",[s._v("面试官说有什么想问的吗？")]),s._v(" "),a("ol",[a("li",[s._v("做什么业务")]),s._v(" "),a("li",[s._v("技术栈用的那些")])]),s._v(" "),a("p",[a("strong",[s._v("总结：")])]),s._v(" "),a("blockquote",[a("p",[s._v("总的来说面试很失败，被面试官稍微再问下，就不会了，看来学习的深度不够，还是要加强学习。")])]),s._v(" "),a("h1",{attrs:{id:"知识补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识补充"}},[s._v("#")]),s._v(" 知识补充")]),s._v(" "),a("h2",{attrs:{id:"linux命令补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux命令补充"}},[s._v("#")]),s._v(" "),a("a",{attrs:{name:"linux命令补充"}},[s._v("linux命令补充")])]),s._v(" "),a("p",[a("strong",[s._v("grep使用")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("Regexp selection and interpretation:\n  -E, --extended-regexp     PATTERN is an extended regular expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ERE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -F, --fixed-strings       PATTERN is a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" of newline-separated fixed strings\n  -G, --basic-regexp        PATTERN is a basic regular expression "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("BRE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -P, --perl-regexp         PATTERN is a Perl regular expression\n  -e, --regexp"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PATTERN      use PATTERN "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" matching\n  -f, --file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FILE           obtain PATTERN from FILE\n  -i, --ignore-case         ignore "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" distinctions\n  -w, --word-regexp         force PATTERN to match only whole words\n  -x, --line-regexp         force PATTERN to match only whole lines\n  -z, --null-data           a data line ends "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" byte, not newline\n\nMiscellaneous:\n  -s, --no-messages         suppress error messages\n  -v, --invert-match        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" non-matching lines\n  -V, --version             display version information and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n      --help                display this "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("help")]),s._v(" text and "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n\nOutput control:\n  -m, --max-count"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM       stop after NUM matches\n  -b, --byte-offset         print the byte offset with output lines\n  -n, --line-number         print line number with output lines\n      --line-buffered       flush output on every line\n  -H, --with-filename       print the "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" each match\n  -h, --no-filename         suppress the "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name prefix on output\n      --label"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("LABEL         use LABEL as the standard input "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" name prefix\n  -o, --only-matching       show only the part of a line matching PATTERN\n  -q, --quiet, --silent     suppress all normal output\n      --binary-files"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("TYPE   assume that binary files are TYPE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            TYPE is "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'binary'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text'")]),s._v(", or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'without-match'")]),s._v("\n  -a, --text                equivalent to --binary-files"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("text\n  -I                        equivalent to --binary-files"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("without-match\n  -d, --directories"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ACTION  how to handle directories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            ACTION is "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'read'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recurse'")]),s._v(", or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'skip'")]),s._v("\n  -D, --devices"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ACTION      how to handle devices, FIFOs and sockets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            ACTION is "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'read'")]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'skip'")]),s._v("\n  -r, --recursive           like --directories"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("recurse\n  -R, --dereference-recursive\n                            likewise, but follow all symlinks\n      --include"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FILE_PATTERN\n                            search only files that match FILE_PATTERN\n      --exclude"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FILE_PATTERN\n                            skip files and directories matching FILE_PATTERN\n      --exclude-from"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("FILE   skip files matching any "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" pattern from FILE\n      --exclude-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PATTERN directories that match PATTERN will be skipped.\n  -L, --files-without-match print only names of FILEs containing no match\n  -l, --files-with-matches  print only names of FILEs containing matches\n  -c, --count               print only a count of matching lines per FILE\n  -T, --initial-tab         "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" tabs line up "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("if needed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -Z, --null                print "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" byte after FILE name\n\nContext control:\n  -B, --before-context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM  print NUM lines of leading context\n  -A, --after-context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM   print NUM lines of trailing context\n  -C, --context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM         print NUM lines of output context\n  -NUM                      same as --context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NUM\n      --group-separator"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("SEP use SEP as a group separator\n      --no-group-separator  use empty string as a group separator\n      --color"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("WHEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(",\n      --colour"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("WHEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       use markers to highlight the matching strings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                            WHEN is "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'always'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'never'")]),s._v(", or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'auto'")]),s._v("\n  -U, --binary              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not strip CR characters at EOL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MSDOS/Windows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  -u, --unix-byte-offsets   report offsets as "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" CRs were not there\n                            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("MSDOS/Windows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br")])]),a("p",[a("strong",[s._v("查询系统命令")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -a "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看内核/操作系统/CPU信息的linux系统信息  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n l /etc/issue "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看操作系统版本  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/cpuinfo "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看CPU信息  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hostname")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看计算机名的linux系统信息命令  ")]),s._v("\nlspci -tv "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有PCI设备   ")]),s._v("\nlsusb -tv "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有USB设备的linux系统信息命令  ")]),s._v("\nlsmod "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出加载的内核模块   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("env")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看环境变量资源  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" -m "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看内存使用量和交换区使用量   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v(" -h "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看各分区使用情况  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v(" -sh "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定目录的大小   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" MemTotal /proc/meminfo "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看内存总量  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" MemFree /proc/meminfo "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看空闲内存量   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("uptime")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看系统运行时间、用户数、负载  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/loadavg "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看系统负载磁盘和分区   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("column")]),s._v(" -t "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看挂接的分区状态  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fdisk")]),s._v(" -l "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有分区   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("swapon")]),s._v(" -s "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有交换分区  ")]),s._v("\nhdparm -i /dev/hda "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看磁盘参数(仅适用于IDE设备)   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dmesg")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" IDE "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看启动时IDE设备检测状况网络  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有网络接口的属性   ")]),s._v("\niptables -L "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看防火墙设置  ")]),s._v("\nroute -n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看路由表   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -lntp "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有监听端口  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -antp "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有已经建立的连接   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -s "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看网络统计信息进程  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -ef "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有进程   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("top")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 实时显示进程状态用户  ")]),s._v("\nw "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看活动用户   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看指定用户信息  ")]),s._v("\nlast "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看用户登录日志   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d: -f1 /etc/passwd "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看系统所有用户  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d: -f1 /etc/group "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看系统所有组   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("crontab")]),s._v(" -l "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前用户的计划任务服务  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chkconfig")]),s._v(" –list "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有系统服务   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chkconfig")]),s._v(" –list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" on "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有启动的系统服务程序  ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -qa "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有安装的软件包   ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/cpuinfo ：查看CPU相关参数的linux系统命令  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/partitions ：查看linux硬盘和分区信息的系统信息命令   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/meminfo ：查看linux系统内存信息的linux系统命令  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/version ：查看版本，类似uname -r   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/ioports ：查看设备io端口  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/interrupts ：查看中断   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/pci ：查看pci设备的信息  \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /proc/swaps ：查看所有swap分区的信息  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"sql优化补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql优化补充"}},[s._v("#")]),s._v(" "),a("a",{attrs:{name:"sql优化补充"}},[s._v("sql优化补充")])]),s._v(" "),a("h3",{attrs:{id:"explain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#explain"}},[s._v("#")]),s._v(" explain")]),s._v(" "),a("p",[s._v("如果是mysql的话，我们可以了解下 使用 如何查看执行计划")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/512541-20180803142201303-545775900.png",alt:"img"}})]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看SQL是否使用索引，前面加上explain即可")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explain")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Jefabc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- expain出来的信息有10列，分别是id、select_type、table、type、possible_keys、key、key_len、ref、rows、Extra")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("一、 id")])]),s._v(" "),a("p",[s._v("SELECT识别符。这是SELECT的查询序列号")]),s._v(" "),a("p",[a("strong",[s._v("我的理解是SQL执行的顺序的标识，SQL从大到小的执行")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("id相同时，执行顺序由上至下")])]),s._v(" "),a("li",[a("p",[s._v("如果是子查询，id的序号会递增，id值越大优先级越高，越先被执行")])]),s._v(" "),a("li",[a("p",[s._v("id如果相同，可以认为是一组，从上往下顺序执行；在所有组中，id值越大，优先级越高，越先执行")])])]),s._v(" "),a("p",[a("strong",[s._v("二、select_type")])]),s._v(" "),a("p",[s._v("查询中每个select子句的类型")]),s._v(" "),a("p",[s._v("(1) SIMPLE(简单SELECT，不使用UNION或子查询等)")]),s._v(" "),a("p",[s._v("(2) PRIMARY(子查询中最外层查询，查询中若包含任何复杂的子部分，最外层的select被标记为PRIMARY)")]),s._v(" "),a("p",[s._v("(3) UNION(UNION中的第二个或后面的SELECT语句)")]),s._v(" "),a("p",[s._v("(4) DEPENDENT UNION(UNION中的第二个或后面的SELECT语句，取决于外面的查询)")]),s._v(" "),a("p",[s._v("(5) UNION RESULT(UNION的结果，union语句中第二个select开始后面所有select)")]),s._v(" "),a("p",[s._v("(6) SUBQUERY(子查询中的第一个SELECT，结果不依赖于外部查询)")]),s._v(" "),a("p",[s._v("(7) DEPENDENT SUBQUERY(子查询中的第一个SELECT，依赖于外部查询)")]),s._v(" "),a("p",[s._v("(8) DERIVED(派生表的SELECT, FROM子句的子查询)")]),s._v(" "),a("p",[s._v("(9) UNCACHEABLE SUBQUERY(一个子查询的结果不能被缓存，必须重新评估外链接的第一行)")]),s._v(" "),a("p",[a("strong",[s._v("三、table")])]),s._v(" "),a("p",[s._v("显示这一步所访问数据库中表名称（显示这一行的数据是关于哪张表的），有时不是真实的表名字，可能是简称，例如上面的e，d，也可能是第几步执行的结果的简称")]),s._v(" "),a("p",[a("strong",[s._v("四、type")])]),s._v(" "),a("p",[s._v("对表访问方式，表示MySQL在表中找到所需行的方式，又称“访问类型”。")]),s._v(" "),a("p",[s._v("常用的类型有： "),a("strong",[s._v("ALL、index、range、 ref、eq_ref、const、system、NULL（从左到右，性能从差到好）")])]),s._v(" "),a("p",[s._v("ALL：Full Table Scan， MySQL将遍历全表以找到匹配的行")]),s._v(" "),a("p",[s._v("index: Full Index Scan，index与ALL区别为index类型只遍历索引树")]),s._v(" "),a("p",[s._v("range:只检索给定范围的行，使用一个索引来选择行")]),s._v(" "),a("p",[s._v("ref: 表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值")]),s._v(" "),a("p",[s._v("eq_ref: 类似ref，区别就在使用的索引是唯一索引，对于每个索引键值，表中只有一条记录匹配，简单来说，就是多表连接中使用primary key或者 unique key作为关联条件")]),s._v(" "),a("p",[s._v("const、system: 当MySQL对查询某部分进行优化，并转换为一个常量时，使用这些类型访问。如将主键置于where列表中，MySQL就能将该查询转换为一个常量，system是const类型的特例，当查询的表只有一行的情况下，使用system")]),s._v(" "),a("p",[s._v("NULL: MySQL在优化过程中分解语句，执行时甚至不用访问表或索引，例如从一个索引列里选取最小值可以通过单独索引查找完成。")]),s._v(" "),a("p",[a("strong",[s._v("五、possible_keys")])]),s._v(" "),a("p",[a("strong",[s._v("指出MySQL能使用哪个索引在表中找到记录，查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询使用（该查询可以利用的索引，如果没有任何索引显示 null）")])]),s._v(" "),a("p",[s._v("该列完全独立于EXPLAIN输出所示的表的次序。这意味着在possible_keys中的某些键实际上不能按生成的表次序使用。\n如果该列是NULL，则没有相关的索引。在这种情况下，可以通过检查WHERE子句看是否它引用某些列或适合索引的列来提高你的查询性能。如果是这样，创造一个适当的索引并且再次用EXPLAIN检查查询")]),s._v(" "),a("p",[a("strong",[s._v("六、Key")])]),s._v(" "),a("p",[a("strong",[s._v("key列显示MySQL实际决定使用的键（索引），必然包含在possible_keys中")])]),s._v(" "),a("p",[s._v("如果没有选择索引，键是NULL。要想强制MySQL使用或忽视possible_keys列中的索引，在查询中使用FORCE INDEX、USE INDEX或者IGNORE INDEX。")]),s._v(" "),a("p",[a("strong",[s._v("七、key_len")])]),s._v(" "),a("p",[a("strong",[s._v("表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度（key_len显示的值为索引字段的最大可能长度，并非实际使用长度，即key_len是根据表定义计算而得，不是通过表内检索出的）")])]),s._v(" "),a("p",[s._v("不损失精确性的情况下，长度越短越好")]),s._v(" "),a("p",[a("strong",[s._v("八、ref")])]),s._v(" "),a("p",[a("strong",[s._v("列与索引的比较，表示上述表的连接匹配条件，即哪些列或常量被用于查找索引列上的值")])]),s._v(" "),a("p",[a("strong",[s._v("九、rows")])]),s._v(" "),a("p",[a("strong",[s._v("估算出结果集行数，表示MySQL根据表统计信息及索引选用情况，估算的找到所需的记录所需要读取的行数")])]),s._v(" "),a("p",[a("strong",[s._v("十、Extra")])]),s._v(" "),a("p",[a("strong",[s._v("该列包含MySQL解决查询的详细信息,有以下几种情况：")])]),s._v(" "),a("p",[s._v("Using where:不用读取表中所有信息，仅通过索引就可以获取所需数据，这发生在对表的全部的请求列都是同一个索引的部分的时候，表示mysql服务器将在存储引擎检索行后再进行过滤")]),s._v(" "),a("p",[s._v("Using temporary：表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询，常见 group by ; order by")]),s._v(" "),a("p",[s._v("Using filesort：当Query中包含 order by 操作，而且无法利用索引完成的排序操作称为“文件排序”")]),s._v(" "),a("p",[s._v("sing join buffer：改值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进能。")]),s._v(" "),a("p",[s._v("Impossible where：这个值强调了where语句会导致没有符合条件的行（通过收集统计信息不可能存在结果）。")]),s._v(" "),a("p",[s._v("Select tables optimized away：这个值意味着仅通过使用索引，优化器可能仅从聚合函数结果中返回一行")]),s._v(" "),a("p",[s._v("No tables used：Query语句中使用from dual 或不含任何from子句")]),s._v(" "),a("h3",{attrs:{id:"sql优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql优化"}},[s._v("#")]),s._v(" sql优化")]),s._v(" "),a("p",[s._v("① SQL优化")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("避免 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("，只查询需要的字段。\n小表驱动大表，即小的数据集驱动大的数据集：\n当B表的数据集比A表小时，用"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v("优化 exist两表执行顺序是先查B表再查A表查询语句："),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tb_dept "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tb_dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n当A表的数据集比B表小时，用exist优化"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" ，两表执行顺序是先查A表，再查B表，查询语句："),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" A "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" B "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" A"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" B"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n尽量使用连接代替子查询，因为使用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 时，MySQL 不会在内存中创建临时表。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("② 优化索引的使用")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("尽量使用主键查询，而非其他索引，因为主键查询不会触发回表查询。\n不做列运算，把计算都放入各个业务系统实现\n查询语句尽可能简单，大语句拆小语句，减少锁时间\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" 查询改写成 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" 查询\n不用函数和触发器\n避免 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("xx 查询，可以使用："),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n少用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 查询\n使用同类型比较，比如 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123'")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n尽量避免在 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" 子句中使用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" 或者 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v(" 操作符，查询引用会放弃索引而进行全表扫描\n列表数据使用分页查询，每页数据量不要太大\n避免在索引列上使用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("③ 表结构设计优化")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("使用可以存下数据最小的数据类型。\n尽量使用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tinyint")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("smallint")]),s._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("mediumint")]),s._v(" 作为整数类型而非 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("。\n尽可能使用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" 定义字段，因为 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" 占用 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 字节空间。数字可以默认 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" ，字符串默认 “”\n尽量少用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("text")]),s._v(" 类型，非用不可时最好独立出一张表。\n尽量使用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("timestamp")]),s._v("，而非 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("datetime")]),s._v("。\n单表不要有太多字段，建议在 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" 个字段以内。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"类加载机制补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类加载机制补充"}},[s._v("#")]),s._v(" "),a("a",{attrs:{name:"类加载机制补充"}},[s._v("类加载机制补充")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/image-20210417030449151.png",alt:"image-20210417030449151"}})]),s._v(" "),a("h3",{attrs:{id:"类加载时机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类加载时机"}},[s._v("#")]),s._v(" 类加载时机")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("遇到new、getstatic、putstatic或invokestatic这四条字节码指令时，如果类型没有进行过初始")]),s._v(" "),a("p",[s._v("化，则需要先触发其初始化阶段。")])]),s._v(" "),a("li",[a("p",[s._v("使用java.lang.reflect包的方法对类型进行反射调用的时候，如果类型没有进行过初始化，则需")]),s._v(" "),a("p",[s._v("要先触发其初始化")])]),s._v(" "),a("li",[a("p",[s._v("当初始化类的时候，如果发现其父类还没有进行过初始化，则需要先触发其父类的初始化。")])]),s._v(" "),a("li",[a("p",[s._v("当虚拟机启动时，用户需要指定一个要执行的主类（包含main()方法的那个类），虚拟机会先")]),s._v(" "),a("p",[s._v("初始化这个主类。")])]),s._v(" "),a("li",[a("p",[s._v("当使用JDK 7新加入的动态语言支持时，如果一个java.lang.invoke.MethodHandle实例最后的解")]),s._v(" "),a("p",[s._v("析结果为REF_getStatic、REF_putStatic、REF_invokeStatic、REF_newInvokeSpecial四种类型的方法句")]),s._v(" "),a("p",[s._v("柄，并且这个方法句柄对应的类没有进行过初始化，则需要先触发其初始化。")])]),s._v(" "),a("li",[a("p",[s._v("当一个接口中定义了JDK 8新加入的默认方法（被default关键字修饰的接口方法）时，如果有")]),s._v(" "),a("p",[s._v("这个接口的实现类发生了初始化，那该接口要在其之前被初始化。")]),s._v(" "),a("blockquote",[a("p",[s._v("对于这六种会触发类型进行初始化的场景，《Java虚拟机规范》中使用了一个非常强烈的限定语")]),s._v(" "),a("p",[s._v("——“有且只有”，这六种场景中的行为称为对一个类型进行主动引用。除此之外，所有引用类型的方")]),s._v(" "),a("p",[s._v("式都不会触发初始化，称为被动引用")])])])]),s._v(" "),a("h3",{attrs:{id:"类加载机制主要五个阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类加载机制主要五个阶段"}},[s._v("#")]),s._v(" 类加载机制主要五个阶段")]),s._v(" "),a("h4",{attrs:{id:"加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载"}},[s._v("#")]),s._v(" 加载")]),s._v(" "),a("p",[s._v("“加载”（Loading）阶段是整个“类加载”（Class Loading）过程中的一个阶段，希望读者没有混淆")]),s._v(" "),a("p",[s._v("这两个看起来很相似的名词。在加载阶段，Java虚拟机需要完成以下三件事情：")]),s._v(" "),a("p",[s._v("1）通过一个类的全限定名来获取定义此类的二进制字节流。")]),s._v(" "),a("p",[s._v("2）将这个字节流所代表的静态存储结构转化为方法区的运行时数据结构。")]),s._v(" "),a("p",[s._v("3）在内存中生成一个代表这个类的java.lang.Class对象，作为方法区这个类的各种数据的访问入")]),s._v(" "),a("p",[s._v("口。")]),s._v(" "),a("blockquote",[a("p",[s._v("总的来说，虚拟机拿到class文件（或者是其他形式）转化为类对象存放在方法区中。")])]),s._v(" "),a("h4",{attrs:{id:"验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[s._v("#")]),s._v(" 验证")]),s._v(" "),a("ol",[a("li",[s._v("文件格式验证")]),s._v(" "),a("li",[s._v("元数据验证")]),s._v(" "),a("li",[s._v("字节码验证")]),s._v(" "),a("li",[s._v("符号引用验证")])]),s._v(" "),a("h4",{attrs:{id:"准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[s._v("#")]),s._v(" 准备")]),s._v(" "),a("p",[s._v("准备阶段是正式为类中定义的变量（即静态变量，被static修饰的变量）分配内存并设置类变量初")]),s._v(" "),a("p",[s._v("始值的阶段。")]),s._v(" "),a("h4",{attrs:{id:"解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解析"}},[s._v("#")]),s._v(" 解析")]),s._v(" "),a("p",[s._v("解析阶段是Java虚拟机将常量池内的符号引用替换为直接引用的过程。")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("·符号引用")]),s._v("（Symbolic References）：符号引用以一组符号来描述所引用的目标，符号可以是任何")]),s._v(" "),a("p",[s._v("形式的字面量，只要使用时能无歧义地定位到目标即可。符号引用与虚拟机实现的内存布局无关，引")]),s._v(" "),a("p",[s._v("用的目标并不一定是已经加载到虚拟机内存当中的内容。各种虚拟机实现的内存布局可以各不相同，")]),s._v(" "),a("p",[s._v("但是它们能接受的符号引用必须都是一致的，因为符号引用的字面量形式明确定义在《Java虚拟机规")]),s._v(" "),a("p",[s._v("范》的Class文件格式中。")]),s._v(" "),a("p",[s._v("·"),a("strong",[s._v("直接引用")]),s._v("（Direct References）：直接引用是可以直接指向目标的指针、相对偏移量或者是一个能")]),s._v(" "),a("p",[s._v("间接定位到目标的句柄。直接引用是和虚拟机实现的内存布局直接相关的，同一个符号引用在不同虚")]),s._v(" "),a("p",[s._v("拟机实例上翻译出来的直接引用一般不会相同。如果有了直接引用，那引用的目标必定已经在虚拟机")]),s._v(" "),a("p",[s._v("的内存中存在。")])]),s._v(" "),a("h4",{attrs:{id:"初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[s._v("#")]),s._v(" 初始化")]),s._v(" "),a("p",[s._v("初始化阶段就是执行类构造器方法的过程")]),s._v(" "),a("blockquote",[a("p",[s._v("方法是由编译器自动收集类中的所有类变量的赋值动作和静态语句块（static{}块）中的")]),s._v(" "),a("p",[s._v("语句合并产生的，编译器收集的顺序是由语句在源文件中出现的顺序决定的，静态语句块中只能访问")]),s._v(" "),a("p",[s._v("到定义在静态语句块之前的变量，定义在它之后的变量，在前面的静态语句块可以赋值，但是不能访")]),s._v(" "),a("p",[s._v("问")])])])}),[],!1,null,null,null);t.default=e.exports}}]);