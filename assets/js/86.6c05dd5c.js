(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{550:function(a,s,e){"use strict";e.r(s);var t=e(20),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"一、安装gitlab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、安装gitlab"}},[a._v("#")]),a._v(" 一、安装Gitlab")]),a._v(" "),e("h3",{attrs:{id:"_1、拉取镜像并启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、拉取镜像并启动"}},[a._v("#")]),a._v(" 1、拉取镜像并启动")]),a._v(" "),e("p",[a._v("由于服务器的"),e("code",[a._v("80")]),a._v("端口可能被占用，所以这里我们改成了其他端口来启动")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -d -p 2443:443 -p 8090:80 -p 2222:22 --name gitlab --restart always \\\n-v/opt/gitlab/config:/etc/gitlab \\\n-v /opt/gitlab/logs:/var/log/gitlab \\\n-v /opt/gitlab/data:/var/opt/gitlab \\\nbeginor/gitlab-ce\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h3",{attrs:{id:"_2、修改配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、修改配置文件"}},[a._v("#")]),a._v(" 2、修改配置文件")]),a._v(" "),e("blockquote",[e("p",[e("strong",[a._v("提示")]),a._v("：等待docker运行gitlab一小段时间后在操作，否则可能出现文件找不到")])]),a._v(" "),e("h4",{attrs:{id:"修改gitlab-yml文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改gitlab-yml文件"}},[a._v("#")]),a._v(" 修改gitlab.yml文件")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vim /opt/gitlab/data/gitlab-rails/etc/gitlab.yml\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("找到如下配置，修改host为你服务的IP或者域名(不能加"),e("code",[a._v("http://")]),a._v(")，修改完毕后保存退出")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("  gitlab:\n    # 这里要将host设置为你gitlab所在的服务器IP或者域名\n    host: 1.15.141.114\n    port: 8090\n    https: false\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h4",{attrs:{id:"修改gitlab-rb文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改gitlab-rb文件"}},[a._v("#")]),a._v(" 修改gitlab.rb文件")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vim /opt/gitlab/config/gitlab.rb\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("找到"),e("code",[a._v("external_url")]),a._v("，默认是被注释的，要打开，并填写暴露出去的"),e("code",[a._v("http://ip:port")]),a._v("，"),e("code",[a._v("IP")]),a._v("一定要和"),e("code",[a._v("gitlab.yml")]),a._v("文件配置的相同，"),e("code",[a._v("port")]),a._v("为你启动时指定的，我们这里使用"),e("code",[a._v("8090")]),a._v("作为端口；最后加上ssh协议下使用的IP和端口(这里的端口是你启动时指定的，我们这里是"),e("code",[a._v("2222")]),a._v(")，最后保存并退出")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("external_url 'http://1.15.141.114:8090'\ngitlab_rails['gitlab_ssh_host'] = '127.0.0.1'\ngitlab_rails['gitlab_shell_ssh_port'] = '2222'\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h4",{attrs:{id:"停止并移除之前启动的gitlab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停止并移除之前启动的gitlab"}},[a._v("#")]),a._v(" 停止并移除之前启动的gitlab")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# 停止并移除之前启动的GitLab容器\n    docker rm -f gitlab\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"重新启动gitlab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重新启动gitlab"}},[a._v("#")]),a._v(" 重新启动gitlab")]),a._v(" "),e("p",[a._v("这里要将容器端口改为8090")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -d -p 2443:443 -p 8090:8090 -p 2222:22 --name gitlab --restart always \\\n-v/opt/gitlab/config:/etc/gitlab \\\n-v /opt/gitlab/logs:/var/log/gitlab \\\n-v /opt/gitlab/data:/var/opt/gitlab \\\nbeginor/gitlab-ce\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("等待一段时间，就可以访问了，首次需要更改"),e("code",[a._v("root")]),a._v("账户的密码")]),a._v(" "),e("h2",{attrs:{id:"二、安装gitlab-runner"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、安装gitlab-runner"}},[a._v("#")]),a._v(" 二、安装Gitlab-Runner")]),a._v(" "),e("p",[a._v("可以在项目中或者项目组中以及全局配置中找到"),e("code",[a._v("Runner")]),a._v("配置的地方，"),e("code",[a._v("全局配置仅限GitLab的管理员账号才有权限")])]),a._v(" "),e("ul",[e("li",[e("p",[e("strong",[a._v("项目中")])]),a._v(" "),e("blockquote",[e("p",[a._v("项目中配置的Runner只对当前项目有效\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/271/158/2711584759-600a3af3debf0",alt:"image.png"}}),a._v(" "),e("strong",[a._v("这时候我们展开，就能看到这个设置Runner的区域")]),a._v(" "),e("img",{attrs:{src:"https://image-static.segmentfault.com/489/729/48972986-600a3aff9e832",alt:"image.png"}})])])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("项目组中")])]),a._v(" "),e("blockquote",[e("p",[a._v("只对这个项目组内的所有项目生效\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/165/489/1654897644-600a3b0a0d326",alt:"image.png"}}),a._v(" "),e("strong",[a._v("这个和在项目中一样，都需要展开，往下拉就能看到手动设置Runner的区域")])])])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("全局配置")])]),a._v(" "),e("blockquote",[e("p",[a._v("所有项目都可以一起使用\n"),e("img",{attrs:{src:"http://image-static.segmentfault.com/389/574/3895745356-600a3b1c0407e",alt:"image.png"}}),a._v(" "),e("img",{attrs:{src:"https://image-static.segmentfault.com/174/400/1744008669-600a3b270fcbe",alt:"image.png"}}),a._v(" "),e("strong",[a._v("全局配置在右边就能直接看到手动设置Runner的区域")])])]),a._v(" "),e("h3",{attrs:{id:"_1、拉取runner镜像并启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、拉取runner镜像并启动"}},[a._v("#")]),a._v(" 1、拉取Runner镜像并启动")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -d --name gitlab-runner --restart always -v /srv/gitlab-runner/config:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock gitlab/gitlab-runner:latest\n-- 自己的\ndocker run -d --name gitlab-runner --restart always -v /opt/software/gitlab-runner/config:/etc/gitlab-runner -v /var/run/docker.sock:/var/run/docker.sock gitlab/gitlab-runner:latest\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h3",{attrs:{id:"_2、进入runner容器内"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、进入runner容器内"}},[a._v("#")]),a._v(" 2、进入Runner容器内")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker exec -it gitlab-runner bash\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"_3、运行以下命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、运行以下命令"}},[a._v("#")]),a._v(" 3、运行以下命令")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("gitlab-runner register\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h4",{attrs:{id:"输入gitlab实例的地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入gitlab实例的地址"}},[a._v("#")]),a._v(" 输入Gitlab实例的地址")]),a._v(" "),e("p",[a._v("地址是你手动设置Runner区域里面的URL")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> Please enter the gitlab-ci coordinator URL (e.g. https://gitlab.com )\nhttp://xxx\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"输入token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入token"}},[a._v("#")]),a._v(" 输入token")]),a._v(" "),e("p",[a._v("token是你手动设置Runner区域里面的令牌")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> Please enter the gitlab-ci token for this runner\nxxx\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"输入runner的描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入runner的描述"}},[a._v("#")]),a._v(" 输入Runner的描述")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> Please enter the gitlab-ci description for this runner\n[hostname] my-runner\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"输入与runner关联的标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入与runner关联的标签"}},[a._v("#")]),a._v(" 输入与Runner关联的标签")]),a._v(" "),e("p",[a._v("标签是为了让后期在CI脚本中指定选择某个或者多个Runner，这里我们设置他的标签为"),e("code",[a._v("test")]),a._v("，你们可以设置其他的")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> Please enter the gitlab-ci tags for this runner (comma separated):\ntest\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"输入runner的执行器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输入runner的执行器"}},[a._v("#")]),a._v(" 输入Runner的执行器")]),a._v(" "),e("p",[a._v("由于我们都是基于Docker，所以这里选择执行器为Docker")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> Please enter the executor: ssh, docker+machine, docker-ssh+machine, kubernetes, docker, parallels, virtualbox, docker-ssh, shell:\ndocker\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"设置执行器的版本-设置docker-为了ci方便执行docker命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置执行器的版本-设置docker-为了ci方便执行docker命令"}},[a._v("#")]),a._v(" 设置执行器的版本(设置docker 为了ci方便执行docker命令)")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> Please enter the Docker image (eg. ruby:2.1):\ndocker\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h4",{attrs:{id:"退出容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#退出容器"}},[a._v("#")]),a._v(" 退出容器")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("exit\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("通过以上命令后，就创建成功runner啦，这时候我们去GitLab中我们创建Runner的区域刷新就能看到了\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/126/293/1262934950-600a3b3a63c81",alt:"image.png"}})]),a._v(" "),e("h3",{attrs:{id:"_4、修改runner配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、修改runner配置文件"}},[a._v("#")]),a._v(" 4、修改Runner配置文件")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vim /opt/software/gitlab-runner/config/config.toml\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("strong",[a._v("找到"),e("code",[a._v("volumes")]),a._v("配置，修改结果为如下，分别是挂载了宿主机docker的sock文件和Maven的缓存，减少拉取Jar包的时间消耗，其中"),e("code",[a._v('"/data/.m2/:/.m2/"')]),a._v("这块为Maven的Jar包存放地址，左边为宿主机目录，右边为容器内的Jar包存储路径，这个需要根据自己使用的Maven镜像而定")])]),a._v(" "),e("blockquote",[e("p",[e("strong",[a._v("提示")]),a._v("：如何构建Maven镜像请翻到文章末尾")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('volumes = ["/cache","/var/run/docker.sock:/var/run/docker.sock","/data/.m2/:/.m2/"]\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("strong",[a._v("在"),e("code",[a._v("volumes")]),a._v("配置下方增加一行配置，防止Runner重复拉取镜像")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('pull_policy = "if-not-present"\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[e("strong",[a._v("最后重启Runner")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker restart gitlab-runner\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"三、创建springboot项目测试cicd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、创建springboot项目测试cicd"}},[a._v("#")]),a._v(" 三、创建SpringBoot项目测试CICD")]),a._v(" "),e("p",[e("strong",[a._v("这里就不演示如何创建项目了，不会SpringBoot的自行去学习，这里只展示"),e("code",[a._v(".gitlab-ci.yml")]),a._v("文件")])]),a._v(" "),e("h3",{attrs:{id:"_1、在项目根目录创建个dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、在项目根目录创建个dockerfile"}},[a._v("#")]),a._v(" 1、在项目根目录创建个"),e("code",[a._v("Dockerfile")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('FROM openjdk:8-jdk\nCOPY target/*.jar ci-demo.jar\nEXPOSE 7777\nENTRYPOINT ["java","-jar","ci-demo.jar"]\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h3",{attrs:{id:"_2、项目根目录创建-gitlab-ci-yml文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、项目根目录创建-gitlab-ci-yml文件"}},[a._v("#")]),a._v(" 2、项目根目录创建"),e("code",[a._v(".gitlab-ci.yml")]),a._v("文件")]),a._v(" "),e("p",[a._v("下面脚本中出现了"),e("code",[a._v("172.20.9.3:5001/root/maven:latest")]),a._v("镜像，这块是我们手动构建的Maven镜像，如何构建请前往文章第四部分拓展知识查看")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('# 全局脚本，会运行在各个阶段的script前，如果某个阶段里面存在before_script，那么以那个阶段里的为主\nbefore_script:\n# 这里定义了打包成功后的Docker镜像名称，每一次提交代码后构建成功的镜像名称都是唯一的\n- export IMAGE_FULL_NAME=${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}\n\n# 定义CI执行的阶段，这里可以自己根据情况定义多少个阶段\nstages:\n- compile\n- build\n- run\n# 定义全局变量\nvariables:\nPROJECT: "ci-demo"\n# 这里定义了Maven的jar包存放地址，与我们构建maven私服的时候设置的存放地址一致\nMAVEN_REPO: "/.m2"\n编译:\n# 当前阶段的执行镜像，这是我们自己构建的镜像\nimage: 172.20.9.3:5001/root/maven:latest\n# 属于上面定义的哪一个阶段\nstage: compile\n# 是否允许失败，允许的话如果当前阶段运行失败还会继续执行下一个阶段\nallow_failure: false\n# 只在哪个分支生效\nonly:\n  - master\n# 这里就是你要选择哪个runner来执行了，填写我们创建runner时候指定的标签\ntags:\n  - test\n# 运行脚本\nscript:\n  - mvn -Dmaven.repo.local=$MAVEN_REPO clean package -Dmaven.test.skip=true\n# 因为是Maven编译，所以会有Jar包产物，这里定义产物的过期时间\nartifacts:\n  name: $PROJECT\n  expire_in: 7 days\n  paths:\n    - target/*.jar\n构建镜像:\nimage: docker:stable\nstage: build\nscript:\n  # 这里的变量会自动获取你当前推送代码的gitlab用户和密码以及仓库地址\n  - docker login --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD $CI_REGISTRY\n  # 这里的变量就是我们全局配置定义的了\n  - docker build -t $IMAGE_FULL_NAME .\n  - docker push $IMAGE_FULL_NAME\n  - rm -rf target\n  - docker rmi $IMAGE_FULL_NAME\nonly:\n  - master\ntags:\n  - test\n运行:\nimage: docker:stable\nstage: run\nscript:\n  - docker run -d --name $PROJECT -p 7777:7777 $IMAGE_FULL_NAME\nonly:\n  - master\ntags:\n  - test\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br"),e("span",{staticClass:"line-number"},[a._v("37")]),e("br"),e("span",{staticClass:"line-number"},[a._v("38")]),e("br"),e("span",{staticClass:"line-number"},[a._v("39")]),e("br"),e("span",{staticClass:"line-number"},[a._v("40")]),e("br"),e("span",{staticClass:"line-number"},[a._v("41")]),e("br"),e("span",{staticClass:"line-number"},[a._v("42")]),e("br"),e("span",{staticClass:"line-number"},[a._v("43")]),e("br"),e("span",{staticClass:"line-number"},[a._v("44")]),e("br"),e("span",{staticClass:"line-number"},[a._v("45")]),e("br"),e("span",{staticClass:"line-number"},[a._v("46")]),e("br"),e("span",{staticClass:"line-number"},[a._v("47")]),e("br"),e("span",{staticClass:"line-number"},[a._v("48")]),e("br"),e("span",{staticClass:"line-number"},[a._v("49")]),e("br"),e("span",{staticClass:"line-number"},[a._v("50")]),e("br"),e("span",{staticClass:"line-number"},[a._v("51")]),e("br"),e("span",{staticClass:"line-number"},[a._v("52")]),e("br"),e("span",{staticClass:"line-number"},[a._v("53")]),e("br"),e("span",{staticClass:"line-number"},[a._v("54")]),e("br"),e("span",{staticClass:"line-number"},[a._v("55")]),e("br"),e("span",{staticClass:"line-number"},[a._v("56")]),e("br"),e("span",{staticClass:"line-number"},[a._v("57")]),e("br"),e("span",{staticClass:"line-number"},[a._v("58")]),e("br"),e("span",{staticClass:"line-number"},[a._v("59")]),e("br"),e("span",{staticClass:"line-number"},[a._v("60")]),e("br"),e("span",{staticClass:"line-number"},[a._v("61")]),e("br")])]),e("h3",{attrs:{id:"_3、将项目提交到gitlab仓库即可"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、将项目提交到gitlab仓库即可"}},[a._v("#")]),a._v(" 3、将项目提交到Gitlab仓库即可")]),a._v(" "),e("p",[e("strong",[a._v("编写好脚本后，提交代码到master分支，因为我们在CI脚本里只指定了master分支生效，"),e("code",[a._v("第一次CI执行的时候会比较慢")]),a._v("，因为需要拉取基础镜像和jar包")]),a._v(" "),e("img",{attrs:{src:"https://image-static.segmentfault.com/228/815/2288153356-600a3b4b36a8b",alt:"image.png"}}),a._v("\nCI脚本执行完毕后，我们可以去runner所在服务器进行查看容器是否启动成功，由于我们项目设置了一个接口，所以我们直接尝试访问接口地址看看是不是正常返回，如果返回了就是执行成功了，没有正常返回的话，就需要自己通过"),e("code",[a._v("docker logs -f <容器名>")]),a._v("查看日志了\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/194/878/1948789276-600a3b5a23092",alt:"image.png"}})])])]),a._v(" "),e("blockquote",[e("p",[e("strong",[a._v("建议")]),a._v("："),e("code",[a._v("最好使用内网环境的基础镜像")]),a._v("，否则可能导致CI执行时间过长，比如CI脚本中运行阶段的基础镜像"),e("code",[a._v("docker:stable")]),a._v("还有Dockerfile文件里的基础镜像"),e("code",[a._v("JDK")]),a._v("。拉取时间的长短受服务器性能和网络影响。")])]),a._v(" "),e("p",[a._v("该项目Demo可以前往"),e("a",{attrs:{href:"https://github.com/archine/cicd-demo",target:"_blank",rel:"noopener noreferrer"}},[a._v("GitHub查看"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"四、拓展知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、拓展知识"}},[a._v("#")]),a._v(" 四、拓展知识")]),a._v(" "),e("h3",{attrs:{id:"_1、开启gitlab中docker镜像仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、开启gitlab中docker镜像仓库"}},[a._v("#")]),a._v(" 1、开启GitLab中Docker镜像仓库")]),a._v(" "),e("p",[a._v("首先我们先找台服务器启动一个Docker registry镜像仓库")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -d -v /data/registry:/var/lib/registry -e REGISTRY_STORAGE_DELETE_ENABLED=true -p 5001:5000 --restart=always --name registry registry:2\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("过了一会后通过浏览器访问"),e("code",[a._v("http://<服务器IP>:5051/v2/_catalog")]),a._v("，会返回一个空的JSON，这是因为我们还没推送镜像上去。")]),a._v(" "),e("p",[a._v("在Gitlab中开启Docker镜像仓库，可以直接通过Gitlab中的用户项目权限进行镜像权限控制，非常方便快捷。"),e("code",[a._v("registry_external_url")]),a._v("和"),e("code",[a._v("gitlab_rails['registry_api_url']")]),a._v("替换为你的镜像仓库地址，"),e("code",[a._v("registry_host")]),a._v("、"),e("code",[a._v("registry_host")]),a._v("修改为对应的地址和IP")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("registry_external_url 'http://172.20.9.3:5001'\ngitlab_rails['registry_enabled'] = true\ngitlab_rails['registry_host'] = \"172.20.9.3\"\ngitlab_rails['registry_port'] = \"5001\"\ngitlab_rails['registry_path'] = \"/src/gitlab/data/gitlab-rails/shared/registry\"\ngitlab_rails['registry_api_url'] = \"http://172.20.9.3:5001\"\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("p",[a._v("配置完刷新配置")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker exec -it gitlab gitlab-ctl reconfigure\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("这时候我们随便找到一个项目，点进去查看一下容器库\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/206/042/2060420251-600a3b8eb6abf",alt:"image.png"}})]),a._v(" "),e("p",[a._v("右边的就是如何通过docker提交镜像到该项目了")]),a._v(" "),e("blockquote",[e("p",[a._v("提示：由于我们这边没有配置HTTPS，所以需要给Docker增加如下配置，需要登陆镜像仓库的机子都需要给配上，我们这里是通过runner去打包和启动项目，那么就需要在runner所在服务器的docker进行配置了")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('# 打开文件\nvim /etc/docker/daemon.json\n# 将下面的配置追加到已有的配置中\n"insecure-registries":["xxx:5000"]\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("p",[a._v("最终的效果如下第一行\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/125/605/1256051705-600a3b98c5e30",alt:"image.png"}})]),a._v(" "),e("p",[a._v("配置好后重启Docker")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("systemctl restart docker\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"_2、构建自己的maven镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、构建自己的maven镜像"}},[a._v("#")]),a._v(" 2、构建自己的Maven镜像")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("以下两个文件要放到同一个目录里面\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[e("strong",[a._v("Dockerfile")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("FROM maven:3.6.0-jdk-8-alpine\nCOPY settings.xml /usr/share/maven/ref/\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("Maven配置文件(settings.xml)")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('<?xml version="1.0" encoding="UTF-8"?>\n<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"\n        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n        xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">\n  \x3c!--改为你的Jar包存放目录--\x3e\n  <localRepository>/.m2</localRepository>\n  <mirrors>\n      <mirror>\n          <id>mynexus</id>\n          <name>company nexus</name>\n          <url>更改为你的Maven仓库地址，可以是阿里的私服，也可以是公司内部的私服</url>\n          <mirrorOf>central</mirrorOf>\n      </mirror>\n  </mirrors>\n  <profiles>\n      <profile>\n          <id>jdk18</id>\n          <activation>\n              <jdk>1.8</jdk>\n              <activeByDefault>true</activeByDefault>\n          </activation>\n          <properties>\n              <maven.compiler.source>1.8</maven.compiler.source>\n              <maven.compiler.target>1.8</maven.compiler.target>\n              <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n          </properties>\n      </profile>\n  </profiles>\n</settings>\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br")])]),e("p",[a._v("两个文件创建好之后，通过控制台进入到该目录，尝试构建镜像并上传，本文直接采用GitLab开启Docker镜像仓库，因此这里，我们先去Gitlab创建一个叫Maven的项目，然后查看他的容器库\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/245/284/2452840100-600a3ba93e97c",alt:"image.png"}})])])]),a._v(" "),e("p",[a._v("依次执行框框里的命令，这里需要配置docker镜像仓库地址到你要执行这个命令的机子哦，如果你是在本地，那么就是给本地电脑的docker加上配置了\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/185/277/1852773501-600a3bb72d009",alt:"image.png"}})]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker login 172.20.9.3:5001\n\ndocker build -t 172.20.9.3:5001/root/maven .\n\ndocker push 172.20.9.3:5001/root/maven\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("p",[a._v("执行完毕后我们回到Gitlab查看一下，这时候就有我们推送的镜像了\n"),e("img",{attrs:{src:"https://image-static.segmentfault.com/323/972/3239727844-600a3be9d0e77",alt:"image.png"}})]),a._v(" "),e("p",[a._v("https://segmentfault.com/a/1190000020593208")])])}),[],!1,null,null,null);s.default=n.exports}}]);