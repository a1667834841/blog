(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{474:function(s,a,t){"use strict";t.r(a);var n=t(20),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"线程核心数-如何设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#线程核心数-如何设置"}},[s._v("#")]),s._v(" 线程核心数 如何设置")]),s._v(" "),t("ol",[t("li",[s._v("首先考虑到CPU核心数 Java 中如何获取核心线程数 "),t("code",[s._v("Runtime.getRuntime().availableProcessors();")])]),s._v(" "),t("li",[s._v("考虑任务是 CPU 密集型任务还是 IO 密集型任务\n"),t("strong",[s._v("cpu密集")]),s._v("（"),t("strong",[s._v("比如像加解密，压缩、计算等一系列需要大量耗费 CPU 资源的任务")]),s._v("）：理论上线程的数量 = CPU 核数就是最合适的，不过通常把线程的数量设置为CPU 核数 +1，会实现最优的利用率。\nIO密集型任务：线程数 = CPU 核心数 / (1 - 阻塞系数)\n"),t("strong",[s._v("其中计算密集型阻塞系数为 0，IO 密集型阻塞系数接近 1，一般认为在 0.8 ~ 0.9 之间。比如 8 核 CPU，按照公式就是 2 / ( 1 - 0.9 ) = 20 个线程数")])])]),s._v(" "),t("h2",{attrs:{id:"_5个线程如何判断线程结束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5个线程如何判断线程结束"}},[s._v("#")]),s._v(" 5个线程如何判断线程结束")]),s._v(" "),t("ol",[t("li",[s._v("线程池做的话，线程池有一个termiated终止状态，调用isTermiated可以查看线程池中的线程有没有完全结束")]),s._v(" "),t("li",[s._v("atomicInteger 初始化5，完成一个减一")])]),s._v(" "),t("h2",{attrs:{id:"redis-做缓存-还能做啥-消息队列-分布式锁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-做缓存-还能做啥-消息队列-分布式锁"}},[s._v("#")]),s._v(" redis 做缓存 还能做啥 消息队列 分布式锁")]),s._v(" "),t("p",[s._v("使用redis分布式锁（主要使用了redis中的setnx和getset方法，这两个方法在redisTemplate分别是setIfAbsent和getAndSet方法）实现线程安全，因为redis是单线程，能保证线程的安全性，而且redis强大的读写能力能提高效率。")]),s._v(" "),t("h2",{attrs:{id:"spring-切面编程步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-切面编程步骤"}},[s._v("#")]),s._v(" spring 切面编程步骤")]),s._v(" "),t("ol",[t("li",[s._v("创建切面类，打上@Aspect注解")]),s._v(" "),t("li",[s._v("使用通知注解在方法上，注解的value为切点的位置")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package com.sharpcj.aopdemo.test1;\n\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Before;\nimport org.springframework.stereotype.Component;\n\n@Aspect\n@Component\npublic class BuyAspectJ {\n    @Before("execution(* com.sharpcj.aopdemo.test1.IBuy.buy(..))")\n    public void haha(){\n        System.out.println("男孩女孩都买自己喜欢的东西");\n    }\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("在配置加上")])]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("aop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("proxy-target-class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("或者在配置类上添加")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sharpcj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("aopdemo")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ComponentScan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Configuration")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("org"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("springframework"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("annotation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("EnableAspectJAutoProxy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Configuration")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@ComponentScan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("basePackageClasses "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sharpcj"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("aopdemo"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("test1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("IBuy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@EnableAspectJAutoProxy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("proxyTargetClass "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AppConfig")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"数据库如何看索引被执行了"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库如何看索引被执行了"}},[s._v("#")]),s._v(" 数据库如何看索引被执行了")]),s._v(" "),t("p",[t("strong",[s._v("如果是mysql的话 ，使用explain查看执行计划")])]),s._v(" "),t("p",[t("strong",[s._v("查看 关键字 key 有没有使用到索引")])]),s._v(" "),t("p",[s._v("id：id相同从上往下执行，不同时，id越大，优先级越高，越先执行")]),s._v(" "),t("p",[s._v("select_type、查询的类型，用于区别普通查询，联合查询和子查询等复杂查询")]),s._v(" "),t("p",[s._v("table、表示正在执行的表")]),s._v(" "),t("p",[s._v("type ：system > const > eq_ref > ref > range > index > all")]),s._v(" "),t("p",[s._v("一般来说至少达到range,或者 ref")]),s._v(" "),t("ol",[t("li",[s._v("system 表只有一行记录（等于系统表），这是const类型的特列，平时不会出现，这个也可以忽略不计")]),s._v(" "),t("li",[s._v("const 通过索引一次就找到了，const用于比较primary key 和 unique key，因为只匹配一行数据，所以很快。如果将主键置于where列表中，mysql就能将该查询转换为一个常量")]),s._v(" "),t("li",[s._v("eq_ref 唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键索引和唯一索引 区别于const eq_ref用于联表查询的情况")]),s._v(" "),t("li",[s._v("ref 非唯一索引扫描，返回匹配某个单独值的所有行，本质上也是一种索引访问，它返回所有匹配某个单独值的行，然而，他可能会找到多个符合条件的行，所以他应该属于查找和扫描的混合体")]),s._v(" "),t("li",[s._v("range 只检索给定范围的行，使用一个索引来选择行，一般是在where中出现between、<、>、in等查询，范围扫描好于全表扫描，因为他只需要开始于索引的某一点，而结束于另一点，不用扫描全部索引")]),s._v(" "),t("li",[s._v("index Full Index Scan，Index与All区别为index类型只遍历索引树。通常比All快，因为索引文件通常比数据文件小。也就是说，虽然all和index都是读全表，但是index是从索引中读取的，而all是从硬盘读取的")]),s._v(" "),t("li",[s._v("ALL Full Table Scan,将遍历全表以找到匹配的行")])]),s._v(" "),t("p",[s._v("possible_keys、表示这张表可能会使用到的索引，但实际上并不一定使用到")]),s._v(" "),t("p",[s._v("key：实际上使用的索引")]),s._v(" "),t("p",[s._v("key_len：表示索引中使用的字节数")]),s._v(" "),t("p",[s._v("ref：显示索引的那一列被使用了，如果可能的话，最好是一个常数。哪些列或常量被用于查找索引列上的值。")]),s._v(" "),t("p",[s._v("rows：找到记录所需要读取的行数")]),s._v(" "),t("p",[s._v("Extra：包含不适合在其他列中显式但十分重要的额外信息")]),s._v(" "),t("ul",[t("li"),s._v(" "),t("li",[t("p",[s._v("Using Index:表示相应的select操作中使用了覆盖索引（Covering Index），避免访问了表的数据行，效率不错。如果同时出现using where，表明索引被用来执行索引键值的查找；如果没有同时出现using where，表明索引用来读取数据而非执行查找动作。")])]),s._v(" "),t("li",[t("p",[s._v("Using where:不用读取表中所有信息，仅通过索引就可以获取所需数据，这发生在对表的全部的请求列都是同一个索引的部分的时候，表示mysql服务器将在存储引擎检索行后再进行过滤")])]),s._v(" "),t("li",[t("p",[s._v("Using temporary：表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询，常见 group by ; order by")])]),s._v(" "),t("li",[t("p",[s._v("Using filesort：当Query中包含 order by 操作，而且无法利用索引完成的排序操作称为“文件排序”")])]),s._v(" "),t("li",[t("p",[s._v("Using join buffer：表明使用了连接缓存,比如说在查询的时候，多表join的次数非常多，那么将配置文件中的缓冲区的join buffer调大一些。")])]),s._v(" "),t("li",[t("p",[s._v("Impossible where：where子句的值总是false，不能用来获取任何元组")])]),s._v(" "),t("li",[t("p",[s._v("Select tables optimized away：这个值意味着仅通过使用索引，优化器可能仅从聚合函数结果中返回一行")])]),s._v(" "),t("li",[t("p",[s._v("No tables used：Query语句中使用from dual 或不含任何from子句")])])]),s._v(" "),t("p",[s._v("以上两种信息表示mysql无法使用索引")]),s._v(" "),t("ol",[t("li"),s._v(" "),t("li",[t("p",[s._v("using filesort ：表示mysql会对结果使用一个外部索引排序，而不是从表里按索引次序读到相关内容，可能在内存或磁盘上排序。mysql中无法利用索引完成的操作称为文件排序")])]),s._v(" "),t("li",[t("p",[s._v("using temporary: 使用了用临时表保存中间结果，MySQL在对查询结果排序时使用临时表。常见于排序order by和分组查询group by。")])])]),s._v(" "),t("p",[s._v("by the way\n视屏面试的时候，面试官很不耐烦，没有等我全部说完，就说下一个问题，有点不尊重人。")])])}),[],!1,null,null,null);a.default=e.exports}}]);