(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{460:function(s,e,a){"use strict";a.r(e);var n=a(21),r=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("使用 命令\ndf -ik 查看 内存占用情况\n\n后面发现 是 退出容器后 很多容器都没有删除 导致overlay 占用100%\n-- 容器和镜像 存在 overlay 这里\n// 删除状态为Exited的容器\ndocker ps -a | grep \"Exited\" | awk '{print $1 }'|xargs docker rm\n// 删除镜像tag为null的镜像\ndocker rmi -f $(docker images | grep \"none\" | awk '{print $3}')\n解决！\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h1",{attrs:{id:"docker-空间使用分析与清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-空间使用分析与清理"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://developer.aliyun.com/article/272173",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker 空间使用分析与清理"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[s._v("简介：")]),s._v(" 用户在使用 Docker 部署业务一段时间后，可能会发现宿主节点的磁盘容量持续增长，甚至将磁盘空间耗尽进而引发宿主机异常，进而对业务造成影响。 本文先对 Docker 的空间分析与清理进行说明，然后对容器的磁盘容量限制与使用建议做简要说明。")]),s._v(" "),a("p",[s._v("用户在使用 Docker 部署业务一段时间后，可能会发现宿主节点的磁盘容量持续增长，甚至将磁盘空间耗尽进而引发宿主机异常，进而对业务造成影响。 本文先对 Docker 的空间分析与清理进行说明，然后对容器的磁盘容量限制与使用建议做简要说明。")]),s._v(" "),a("h1",{attrs:{id:"典型问题场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#典型问题场景"}},[s._v("#")]),s._v(" 典型问题场景")]),s._v(" "),a("p",[s._v("用户发现 Docker 宿主机的磁盘空间使用率非常高。通过 du 逐层分析，发现是 Volume 或 overlay2 等目录占用了过高空间。示例如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 根据使用的存储驱动的不同，相应目录会有所不同：\n[root@node3 docker]# du -h --max-depth=1 |sort\n104K    ./network\n13M    ./image\n20K    ./plugins\n24G    ./overlay2   # 这个目录占用了非常高的磁盘磁盘空间\n25G    .\n283M    ./volumes\n4.0K    ./swarm\n4.0K    ./tmp\n4.0K    ./trust\n518M    ./containers\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h1",{attrs:{id:"空间使用分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间使用分析"}},[s._v("#")]),s._v(" 空间使用分析")]),s._v(" "),a("p",[s._v("遇到此类问题，可以参阅如下步骤进行空间分析，定位占用过高空间的业务来源。")]),s._v(" "),a("h2",{attrs:{id:"分析-docker-空间分布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析-docker-空间分布"}},[s._v("#")]),s._v(" 分析 Docker 空间分布")]),s._v(" "),a("p",[s._v("Docker 的内置 CLI 指令 "),a("code",[s._v("docker system df")]),s._v(" ，可用于查询镜像（Images）、容器（Containers）和本地卷（Local Volumes）等空间使用大户的空间占用情况。 示例输出如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@node3 docker]# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              17                  12                  2.713 GB            1.144 GB (42%)\nContainers          15                  12                  10.75 GB            0 B (0%)\nLocal Volumes       8                   4                   282.9 MB            241.8 MB (85%)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"查看空间占用细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看空间占用细节"}},[s._v("#")]),s._v(" 查看空间占用细节")]),s._v(" "),a("p",[s._v("可以进一步通过 "),a("code",[s._v("-v")]),s._v(" 参数查看空间占用细节，以确定具体是哪个镜像、容器或本地卷占用了过高空间。示例输出如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('[root@node3 docker]# docker system df -v\n# 镜像的空间使用情况\nImages space usage:\n\nREPOSITORY                                                   TAG                 IMAGE ID            CREATED             SIZE                SHARED SIZE         UNIQUE SIZE         CONTAINERS\nbusybox                                                      latest              6ad733544a63        5 days ago          1.129 MB            0 B                 1.129 MB            1\nnginx                                                        latest              b8efb18f159b        3 months ago        107.5 MB            107.5 MB            0 B                 4\nubuntu                                                       latest              14f60031763d        3 months ago        119.5 MB            0 B                 119.5 MB            0\nalpine                                                       3.3                 606fed0878ec        4 months ago        4.809 MB            0 B                 4.809 MB            0\ntutum/curl                                                   latest              01176385d84a        3 years ago         224.4 MB            0 B                 224.4 MB            1\n\n# 容器的空间使用情况\nContainers space usage:\n\nCONTAINER ID        IMAGE                                                                    COMMAND                  LOCAL VOLUMES       SIZE                CREATED             STATUS                     NAMES\nd1da451ceeab        busybox                                                                  "ping 127.0.0.1"         0                   10.7 GB             About an hour ago   Up About an hour           dstest\n956ae1d241e8        nginx:latest                                                             "nginx -g \'daemon ..."   0                   26 B                3 months ago        Up 3 months                localTest_restserver_2\n74973d237a06        nginx:latest                                                             "nginx -g \'daemon ..."   0                   2 B                 3 months ago        Up 3 months                \n\n# 本地卷的空间使用情况\nLocal Volumes space usage:\n\nVOLUME NAME                                                        LINKS               SIZE\n83ba8747f4172a3c02a15f85b71e1565affca59f01352b4a94e0d28e65c26d1c   0                   830 B\na479c303b278f1442f66644f694a554aac630e72b7a27065a11ef85c4d87b648   0                   22.16 MB\n79a25b6376e0d6587d8f4f24e08f9467981f04daad14bf3353a12d727d065503   1                   18.83 MB\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h1",{attrs:{id:"空间清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空间清理"}},[s._v("#")]),s._v(" 空间清理")]),s._v(" "),a("h2",{attrs:{id:"自动清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动清理"}},[s._v("#")]),s._v(" 自动清理")]),s._v(" "),a("p",[s._v("可以通过 Docker 内置的 CLI 指令 "),a("code",[s._v("docker system prune")]),s._v(" 来进行自动空间清理。")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("Tips")]),s._v(" ：")]),s._v(" "),a("p",[a("strong",[s._v("不同状态的镜像")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("已使用镜像（used image）")]),s._v("： 指所有已被容器（包括已停止的）关联的镜像。即 docker ps -a 看到的所有容器使用的镜像。")]),s._v(" "),a("li",[a("strong",[s._v("未引用镜像（unreferenced image）")]),s._v("：没有被分配或使用在容器中的镜像，但它有 Tag 信息。")]),s._v(" "),a("li",[a("strong",[s._v("悬空镜像（dangling image）")]),s._v("：未配置任何 Tag （也就无法被引用）的镜像，所以悬空。这通常是由于镜像 build 的时候没有指定 -t 参数配置 Tag 导致的。比如:")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("REPOSITORY                                                   TAG                 IMAGE ID            CREATED             SIZE\n<none>                                                      <none>              6ad733544a63        5 days ago          1.13 MB   # 悬空镜像（dangling image）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("挂起的卷（dangling Volume)")]),s._v("\n类似的，dangling=true 的 Volume 表示没有被任何容器引用的卷。")])]),s._v(" "),a("p",[a("strong",[s._v("docker system prune 自动清理说明")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("该指令默认会清除所有如下资源：\n"),a("ul",[a("li",[s._v("已停止的容器（container）")]),s._v(" "),a("li",[s._v("未被任何容器所使用的卷（volume）")]),s._v(" "),a("li",[s._v("未被任何容器所关联的网络（network）")]),s._v(" "),a("li",[s._v("所有悬空镜像（image）。")])])]),s._v(" "),a("li",[s._v("该指令默认只会清除悬空镜像，未被使用的镜像不会被删除。")]),s._v(" "),a("li",[s._v("添加 "),a("code",[s._v("-a 或 --all")]),s._v(" 参数后，可以一并清除所有未使用的镜像和悬空镜像。")]),s._v(" "),a("li",[s._v("可以添加 "),a("code",[s._v("-f 或 --force")]),s._v(" 参数用以忽略相关告警确认信息。")]),s._v(" "),a("li",[s._v("指令结尾处会显示总计清理释放的空间大小。")])]),s._v(" "),a("p",[s._v("操作示例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@node3 docker]# docker system prune --help\n\nUsage:    docker system prune [OPTIONS]\n\nRemove unused data\n\nOptions:\n  -a, --all     Remove all unused images not just dangling ones\n  -f, --force   Do not prompt for confirmation\n      --help    Print usage\n[root@node3 docker]# docker system prune -a\nWARNING! This will remove:\n    - all stopped containers\n    - all volumes not used by at least one container\n    - all networks not used by at least one container\n    - all images without at least one container associated to them\nAre you sure you want to continue? [y/N] y\nDeleted Containers:\nc09c31c49491ee7f2324160e43947917940221b4e6cc1274906def640a7a631f\n2aa0180e1a0f4c2c64349a6ed969651052373e7a9471050dce9015701cf1b957\n6d18003b06823c5d76d807a319387b06680fc93d0a32bc29c1cea4c07e8d515d\n\nDeleted Volumes:\na479c303b278f1442f66644f694a554aac630e72b7a27065a11ef85c4d87b648\n79a25b6376e0d6587d8f4f24e08f9467981f04daad14bf3353a12d727d065503\n\nDeleted Images:\nuntagged: tutum/curl:latest\nuntagged: tutum/curl@sha256:b6f16e88387acd4e6326176b212b3dae63f5b2134e69560d0b0673cfb0fb976f\ndeleted: sha256:01176385d84aeb1d40ed18c6d3f952abf40d2d2b4aa98fcf0a8a4b01010fb9a9\ndeleted: sha256:c84f85637212412c1d46d1dd50f789df2c3b44678ee3fee6a820888e734f9b5a\nuntagged: test:lastest\ndeleted: sha256:794ff09332586a091514eb3d1c44990244e57e34adc71d4b4334c0674a1377e9\ndeleted: sha256:636a1e7769d2242556243e9a21fb96bb878ab5b94c41ff485667252c968b375e\n\nTotal reclaimed space: 1.565 GB\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br")])]),a("h2",{attrs:{id:"手工清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手工清理"}},[s._v("#")]),s._v(" 手工清理")]),s._v(" "),a("h3",{attrs:{id:"网络清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络清理"}},[s._v("#")]),s._v(" 网络清理")]),s._v(" "),a("p",[s._v("网络配置通常占用的空间非常低，略过。")]),s._v(" "),a("h3",{attrs:{id:"镜像清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像清理"}},[s._v("#")]),s._v(" 镜像清理")]),s._v(" "),a("p",[s._v("如果通过 docker system df 分析，是镜像占用了过高空间。则可以根据业务情况，评估相关镜像的使用情况。对于悬空和未使用的镜像， 可以使用如下指令手工清理：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 删除所有悬空镜像，但不会删除未使用镜像：\ndocker rmi $(docker images -f "dangling=true" -q)\n\n# 删除所有未使用镜像和悬空镜像。\n# 【说明】：轮询到还在被使用的镜像时，会有类似"image is being used by xxx container"的告警信息，所以相关镜像不会被删除，忽略即可。\ndocker rmi $(docker images-q)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"卷清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#卷清理"}},[s._v("#")]),s._v(" 卷清理")]),s._v(" "),a("p",[s._v('如果通过 docker system df 分析，是卷占用了过高空间。则可以根据业务情况，评估相关卷的使用情况。对于未被任何容器调用的卷（-v 结果信息中，"LINKS" 显示为 0），可以使用如下指令手工清理：')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 删除所有未被任何容器关联引用的卷：\ndocker volume rm $(docker volume ls -qf dangling=true)\n\n# 也可以直接使用如下指令，删除所有未被任何容器关联引用的卷（但建议使用上面的方式）\n# 【说明】轮询到还在使用的卷时，会有类似"volume is in use"的告警信息，所以相关卷不会被删除，忽略即可。\ndocker volume rm $(docker volume ls -q)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"容器清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器清理"}},[s._v("#")]),s._v(" 容器清理")]),s._v(" "),a("p",[s._v("如果通过 docker system df 分析，是某个容器占用了过高空间。则可以根据业务情况，评估相关容器的业务归属并进行处理。对于已停止或其它异常状态的容器，可以结合 "),a("code",[s._v("-f 或 --filter")]),s._v("筛选器，使用类似如下指令来手工清理：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 删除所有已退出的容器\ndocker rm -v $(docker ps -aq -f status=exited)\n# 删除所有状态为 dead 的容器\ndocker rm -v $(docker ps -aq -f status=dead)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("更多关于 ps 指令支持的筛选器信息，可以参阅"),a("a",{attrs:{href:"https://docs.docker-cn.com/engine/reference/commandline/ps/#filtering",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("。")])]),s._v(" "),a("h1",{attrs:{id:"在用空间资源分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在用空间资源分析"}},[s._v("#")]),s._v(" 在用空间资源分析")]),s._v(" "),a("p",[s._v("对于还在使用的空间资源，可以参阅如下说明做进一步排查分析。")]),s._v(" "),a("h2",{attrs:{id:"镜像空间分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#镜像空间分析"}},[s._v("#")]),s._v(" 镜像空间分析")]),s._v(" "),a("p",[s._v("如果某个镜像占用了过高空间，则可以通过如下方式做进一步空间分析：")]),s._v(" "),a("ol",[a("li",[s._v("通过 docker system df 获取占用过高空间的镜像信息。")]),s._v(" "),a("li",[s._v("基于相应镜像创建测试容器。")]),s._v(" "),a("li",[s._v("exec 进入容器后，结合 du 等 shell 指令做进一步空间分析，定位出占用最高空间的目录或文件。")]),s._v(" "),a("li",[s._v("结合业务情况做进一步处理，重新 build 镜像。")])]),s._v(" "),a("p",[s._v("示例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[root@node3]# docker exec -it dstest sh\n/ # du -h | head\n8.0K    ./root\n32.0K    ./etc\n4.0K    ./usr/sbin\n8.0K    ./usr\n10.0G    ./home/java/logs\n10.0G    ./home/java\n10.0G    ./home\n1.1M    ./bin\n0    ./dev/shm\n0    ./dev/mqueue\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"容器空间分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容器空间分析"}},[s._v("#")]),s._v(" 容器空间分析")]),s._v(" "),a("p",[s._v("如果某个运行中的容器占用了过高空间，则可以通过如下方式做进一步空间分析：")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("Tips")]),s._v(" ：")]),s._v(" "),a("p",[a("strong",[s._v("容器的只读层与镜像层的空间占用情况")]),s._v("\n一个容器的占用的总空间，包含其最顶层的读写层（writable layer）和底部的只读镜像层（base image layer，read-only）。更多相关说明，可以参阅"),a("a",{attrs:{href:"https://docs.docker-cn.com/engine/userguide/storagedriver/imagesandcontainers/#container-and-layers",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("。\n可以通过 docker ps 的 "),a("code",[s._v("-s")]),s._v(" 参数来分别显示二者的空间占用情况，进而判断相应容器的空间占用主要是来自原始镜像，还是运行中产生。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/zxqzhuzhu/imgs/raw/master/picGo/82ce6b220fe5aef04c051db37c20460d.png",alt:"容器空间占用示意图"}}),s._v("\n示例：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 如下容器的原始镜像占用了 422MB 空间，实际运行过程中只占用了 2B 空间：\nCONTAINER ID        IMAGE                                                                                                                                COMMAND                  CREATED             STATUS              PORTS                                           NAMES                                                                                    SIZE\nac39128ccbc0        registry.aliyuncs.com/acs-sample/wordpress:4.6                                                                                       "/entrypoint.sh ap..."   3 months ago        Up 11 days          0.0.0.0:32779->80/tcp                           Web_web_4                                                                                2 B (virtual 422 MB)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("容器空间占用的分析步骤：")]),s._v(" "),a("ol",[a("li",[s._v("通过 docker system df 获取占用过高空间的容器信息。")]),s._v(" "),a("li",[s._v("通过前述 "),a("code",[s._v("-s")]),s._v(" 参数确认到底是底层镜像，还是运行过程中产生的数据占用了过高空间。")]),s._v(" "),a("li",[s._v("exec 进入容器，结合 du 等 shell 指令做进一步空间分析，定位出占用最高空间的目录或文件。")]),s._v(" "),a("li",[s._v("结合业务情况做进一步处理。")])]),s._v(" "),a("h1",{attrs:{id:"引申-docker-磁盘空间限制与使用建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引申-docker-磁盘空间限制与使用建议"}},[s._v("#")]),s._v(" 引申：Docker 磁盘空间限制与使用建议")]),s._v(" "),a("h2",{attrs:{id:"磁盘空间限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#磁盘空间限制"}},[s._v("#")]),s._v(" 磁盘空间限制")]),s._v(" "),a("h3",{attrs:{id:"使用-device-mapper-存储驱动限制容器磁盘空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-device-mapper-存储驱动限制容器磁盘空间"}},[s._v("#")]),s._v(" 使用 Device Mapper 存储驱动限制容器磁盘空间")]),s._v(" "),a("p",[s._v("如果使用 Device Mapper 作为底层存储驱动，则可以通过 Docker daemon 的如下参数来全局限制单个容器占用空间的大小：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("--storage-opt dm.basesize=20G")]),s._v(" 表示限制单个容器最多占用 20G 空间，将应用于任何新建容器。")])]),s._v(" "),a("p",[s._v("更多关于 Device Mapper 存储驱动的说明，可以参阅"),a("a",{attrs:{href:"https://docs.docker-cn.com/engine/userguide/storagedriver/device-mapper-driver/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"使用-btrfs-存储驱动限制容器磁盘空间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-btrfs-存储驱动限制容器磁盘空间"}},[s._v("#")]),s._v(" 使用 btrfs 存储驱动限制容器磁盘空间")]),s._v(" "),a("p",[s._v("btrfs 驱动主要使用 btrfs 所提供的 subvolume 功能来实现。一个容器会对应一个 subvolume。针对容器对应的 subvolume 启用并配置 quota 即可限制其磁盘空间。示例配置：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("btrfs qgroup limit -e 50G /var/lib/docker/btrfs/subvolumes/<CONTAINER_ID>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("btrfs 还有其它很好的特性，比如可以在线扩容（在线加入一块新的块设备，来扩充整个文件系统的大小）。更多关于 btrfs 存储驱动的说明，可以参阅"),a("a",{attrs:{href:"https://docs.docker-cn.com/engine/userguide/storagedriver/btrfs-driver/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"外挂-lvm-卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外挂-lvm-卷"}},[s._v("#")]),s._v(" 外挂 LVM 卷")]),s._v(" "),a("p",[s._v("如果使用的是其它不支持对单个容器的磁盘容量进行限制的存储驱动，则可以考虑如下通用方案：")]),s._v(" "),a("ul",[a("li",[s._v("通过 LVM 方式创建一个指定容量的卷,然后挂载到宿主操作系统上特定目录。最后通过 --volume 参数来让容器来挂载使用相应目录。")])]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v('：该方案的前提条件是，容器中所有落盘操作要全部落到上述 "--volume" 参数指定的卷中，否则容器还会占用默认 aufs 所在盘的空间,进而造成统计不准。')]),s._v(" "),a("h2",{attrs:{id:"docker-存储使用建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-存储使用建议"}},[s._v("#")]),s._v(" Docker 存储使用建议")]),s._v(" "),a("p",[s._v("细化的存储使用最佳实践与采用的存储驱动（storage driver）类型强相关，您可以参阅"),a("a",{attrs:{href:"https://docs.docker-cn.com/engine/userguide/storagedriver/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1),s._v("做相关了解，本文不做进一步细化说明。\n通用的存储使用建议如下：")]),s._v(" "),a("ul",[a("li",[s._v("容器内的业务日志务必配置轮询覆写，或者使用日志驱动将日志输出到外部存储。避免日志文件持续增长，占用过高磁盘空间。")]),s._v(" "),a("li",[s._v("结合外部监控对宿主机的磁盘空间使用情况进行监控和告警。")]),s._v(" "),a("li",[s._v("可以参阅文档 "),a("a",{attrs:{href:"https://yq.aliyun.com/articles/53313",target:"_blank",rel:"noopener noreferrer"}},[s._v("如何给容器服务的Docker增加数据盘"),a("OutboundLink")],1),s._v("来扩容默认 Docker 存储空间。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);